<%@ Master Language="VB" AutoEventWireup="false" CodeBehind="MasterPage.master.vb" Inherits="GRC.Connect.Web.MasterPage" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title>TUV SUD GRC Connect</title>
    <%--<meta http-equiv="X-UA-Compatible" content="IE=9; IE=8; IE=7" />--%>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta charset="utf-8" />
    <meta http-equiv="CACHE-CONTROL" content="NO-STORE" />
    <meta http-equiv="PRAGMA" content="NO-CACHE" />
    <meta name="EXPIRES" content="0" />
    <meta name="VERSION" content="{{VER}}" />

    <script type="text/javascript">
        /* A PUBLIC CLASS TO HOLD CONSTANTS */
        var utilConstants = new function () {
            /* PRACTICE or PROGRAM PAGE IDs */
            this.pageId_Gauge = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_Gauge %>";
            this.pageId_Fire = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_Fire %>";
            this.pageId_Boiler = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_Boiler %>";
            this.pageId_Juris = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_Juris %>";
            this.pageId_Infrared = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_Infrared %>";
            this.pageId_Seismic = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_Seismic %>";
            this.pageId_Wind = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_Wind %>";
            this.pageId_Flood = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_Flood %>";

            /* LOCATION LISTING or GRID PAGE */
            this.pageId_LocationListing_Fire = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_LocationListing_Fire %>";
            this.pageId_LocationListing_Boiler = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_LocationListing_Boiler %>";
            this.pageId_LocationListing_Juris = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_LocationListing_Juris %>";
            this.pageId_LocationListing_Infrared = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_LocationListing_Infrared %>";
            this.pageId_LocationListing_Seismic = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_LocationListing_Seismic %>";
            this.pageId_LocationListing_Wind = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_LocationListing_Wind %>";
            this.pageId_LocationListing_Flood = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_LocationListing_Flood %>";

            /* LOCATION DETAILS PAGE */
            this.pageId_LocationDetails_Fire = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_LocationDetails_Fire %>";
            this.pageId_LocationDetails_Boiler = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_LocationDetails_Boiler %>";
            this.pageId_LocationDetails_Juris = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_LocationDetails_Juris %>";
            this.pageId_LocationDetails_Infrared = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_LocationDetails_Infrared %>";
            this.pageId_LocationDetails_Seismic = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_LocationDetails_Seismic %>";
            this.pageId_LocationDetails_Wind = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_LocationDetails_Wind %>";
            this.pageId_LocationDetails_Flood = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_LocationDetails_Flood %>";

            /* FACILITY RATINGS PAGE */
            this.pageId_FacilityRating_Fire = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_FacilityRating_Fire %>";
            this.pageId_FacilityRating_Boiler = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_FacilityRating_Boiler %>";

            /* RECOMMENDATION TRACKING PAGE */
            this.pageId_RecommendationTracking_Fire = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_RecommendationTracking_Fire %>";
            this.pageId_RecommendationTracking_Fire_Feature_X = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_RecommendationTracking_Fire_Feature_X %>";
            this.pageId_RecommendationTracking_Boiler = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_RecommendationTracking_Boiler %>";
            this.pageId_RecommendationTracking_Infrared = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_RecommendationTracking_Infrared %>";
            this.pageId_RecommendationTracking_Seismic = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_RecommendationTracking_Seismic %>";
            this.pageId_RecommendationTracking_Wind = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_RecommendationTracking_Wind %>";
            this.pageId_RecommendationTracking_Flood = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_RecommendationTracking_Flood %>";

            /* C.O.P.E. PAGE */
            this.pageId_COPE_Fire = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_COPE_Fire %>";

            /* IMPAIRMENTS */
            this.pageId_Impairments_Fire = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_Impairments_Fire %>";

            /* PLAN / PROJECT REVIEW */
            this.pageId_PlanProjectReview_Fire = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_PlanProjectReview_Fire %>";

            /* CONTACTS */
            this.pageId_Contacts_Fire = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_Contacts_Fire %>";

            /* DOCUMENT LIBRARY */
            this.pageId_DocumentLibrary_Fire = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_DocumentLibrary_Fire %>";

            /* OTHER PAGES */
            this.pageId_ClientAdmin = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_ClientAdmin %>";
            this.pageId_SiteMap = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_SiteMap %>";
            this.pageId_AllReports = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_AllReports %>";
            this.pageId_AllExports = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_AllExports %>";
            this.pageId_ContactUs = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_ContactUs %>";
            this.pageId_LogOut = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_LogOut %>";
            this.pageId_LogOutGrid = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_LogOutGrid %>";
            this.pageId_RecentUpdates = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_RecentUpdates %>";
            this.pageId_WhatsNew = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_WhatsNew %>";
            this.pageId_UserReclassification = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_UserReclassification%>";
            this.pageId_UserAccount = "<%# GRC.Connect.Libraries.CoreLib.UtilConstants.PageId_UserAccount%>";

            /* GRIDS */
            this.GridId_BMLocationListings = "61";
            this.GridId_BMLocationListingsExtract = "62";
            this.GridId_FireLocationListingsExtract = "63";
            this.GridId_FireLocationListingsWithImpairmentsExtract = "64";
            this.GridId_FireLocationListingsWithoutImpairmentsExtract = "65";
            this.GridId_IRLocationListingsExtract = "66";
            this.GridId_JurisLocationListingsExtract = "67";
            this.GridId_NatHazFloodLocationListingsExtract = "68";
            this.GridId_NatHazSeismicLocationListingsExtract = "69";
            this.GridId_NatHazWindLocationListingsExtrac = "70";
            this.GridId_FireLocationListings = "71";
            this.GridId_IRLocationListings = "72";
            this.GridId_JurisLocationListings = "73";
            this.GridId_NatHazFloodLocationListings = "74";
            this.GridId_NatHazSeismicLocationListings = "75";
            this.GridId_NatHazWindLocationListings = "76";
        };

        /* OTHER GLOBAL VARIABLES */
        var globalIsMapShown = false;

        /* FUNCTIONS */
        function closeWindow() {
            window.close();
        }

        function goBack() {
            history.back();
        }

        function showNotAvailable() {
            alert("This functionality is not yet available.");
        }

        function ShowGenerating(pMS) {
            /* SHOW A GENERATING POPUP FOR A NUMBER OF MILLISECONDS */
        }

        var windowObjectReference = null;
        var PreviousUrl;
        function openRequestedSinglePopup(strUrl, gridId, chartId, reportId) {
            // BUILD THE IDS USED FOR REPORTS, GRIDS, AND CHARTS
            var zQueryOperator = "?";
            var zItemAdded = false;
            if (strUrl.indexOf("?") > -1) {
                zQueryOperator = "&";
            }
            if (gridId !== undefined && gridId !== null) {
                strUrl = strUrl + zQueryOperator + "gridId=" + gridId;
                zQueryOperator = "&";
            }
            if (chartId !== undefined && chartId !== null) {
                strUrl = strUrl + zQueryOperator + "chartId=" + chartId;
                zQueryOperator = "&";
            }
            if (reportId !== undefined && reportId !== null) {
                strUrl = strUrl + zQueryOperator + "reportId=" + reportId;
                zQueryOperator = "&";
            }
            // NAVIGATE TO THE CORRECT AREA
            if (windowObjectReference == null || windowObjectReference == undefined || windowObjectReference.closed) {
                //// IF THE WINDOW DOWN NOT EXIST, OPEN A NEW ONE
                windowObjectReference = window.open(strUrl, "SingleSecondaryWindowName", "resizable=yes,scrollbars=yes,status=yes");
                windowObjectReference.focus();
            }
            else if (PreviousUrl != strUrl) {
                //// IF THE WINDOW EXISTS AND THE URL IS NEW, CHANGE THE URL OF THE OPEN WINDOW
                windowObjectReference.location.href = strUrl;
                windowObjectReference.focus();
            }
            else {
                //// IF THE WINDOW EXISTS AND THE URL IS THE SAME, MAKE WINDOW ON TOP
                windowObjectReference.focus();
            };
            PreviousUrl = strUrl;
        }

        var windowObjectDocumentLibrary = null;
        function openRequestedDocumentLibrary(strUrl) {
            // BUILD THE IDS USED FOR REPORTS, GRIDS, AND CHARTS
            var zQueryOperator = "?";
            var zItemAdded = false;
            if (strUrl.indexOf("?") > -1) {
                zQueryOperator = "&";
            }
            // NAVIGATE TO THE CORRECT AREA
            if (windowObjectDocumentLibrary == null || windowObjectDocumentLibrary == undefined || windowObjectDocumentLibrary.closed) {
                //// IF THE WINDOW DOWN NOT EXIST, OPEN A NEW ONE
                windowObjectDocumentLibrary = window.open(strUrl, "SingleSecondaryWindowDocumentLibrary", "resizable=yes,scrollbars=yes,status=yes");
                windowObjectDocumentLibrary.focus();
            }
            else if (PreviousUrl != strUrl) {
                //// IF THE WINDOW EXISTS AND THE URL IS NEW, CHANGE THE URL OF THE OPEN WINDOW
                windowObjectDocumentLibrary.location.href = strUrl;
                windowObjectDocumentLibrary.focus();
            }
            else {
                //// IF THE WINDOW EXISTS AND THE URL IS THE SAME, MAKE WINDOW ON TOP
                windowObjectDocumentLibrary.focus();
            };
            PreviousUrl = strUrl;
        }

        var windowObjectReferenceFromChart = null;
        function openRequestedFromChartPopup(strUrl) {
            // BUILD THE IDS USED FOR REPORTS, GRIDS, AND CHARTS
            var zQueryOperator = "?";
            var zItemAdded = false;
            if (strUrl.indexOf("?") > -1) {
                zQueryOperator = "&";
            }
            // NAVIGATE TO THE CORRECT AREA
            if (windowObjectReferenceFromChart == null || windowObjectReferenceFromChart == undefined || windowObjectReferenceFromChart.closed) {
                // IF THE WINDOW DOWN NOT EXIST, OPEN A NEW ONE
                windowObjectReferenceFromChart = window.open(strUrl, "SingleSecondaryWindowFromChartName", "resizable=yes,scrollbars=yes,status=yes");
                windowObjectReferenceFromChart.focus();
            }
            else if (PreviousUrl != strUrl) {
                // IF THE WINDOW EXISTS AND THE URL IS NEW, CHANGE THE URL OF THE OPEN WINDOW
                windowObjectReferenceFromChart.location.href = strUrl;
                windowObjectReferenceFromChart.focus();
            }
            else {
                // IF THE WINDOW EXISTS AND THE URL IS THE SAME, MAKE WINDOW ON TOP
                windowObjectReferenceFromChart.focus();
            };
            PreviousUrl = strUrl;
        }

        var windowObjectReferenceKnowledgeBase = null;
        function openRequestedKnowledgeBasePopup(strUrl, pNavId) {
            // BUILD THE URL
            var zGUID = getGSafeGUID();
            var zQueryOperator = "?";
            var zSection = "";
            if (globalIsMapShown) {
                zSection = "#lnk4Map";
                //zSection = "#mapView";
            }
            if (strUrl) {
                if (strUrl.indexOf("?") > -1) {
                    zQueryOperator = "&";
                }
                strUrl = strUrl + zQueryOperator + "sid=" + zGUID + zSection;
            } else {
                strUrl = "../../KnowledgeBase/index.html" + zQueryOperator + "sid=" + zGUID + zSection;
                zQueryOperator = "&";
            }
            // BUILD THE IDS USED FOR REPORTS, GRIDS, AND CHARTS
            var zOptionsKnowledgeBase = "" +
                "width=890" +
                ",height=600" +
                ",location=no" +
                ",menubar=no" +
                ",resizable=yes" +
                ",scrollbars=yes" +
                ",status=yes" +
                ",titlebar=no" +
                ",toolbar=no";
            var zItemAdded = false;
            // NAVIGATE TO THE CORRECT AREA
            if (windowObjectReferenceKnowledgeBase == null || windowObjectReferenceKnowledgeBase == undefined || windowObjectReferenceKnowledgeBase.closed) {
                // IF THE WINDOW DOWN NOT EXIST, OPEN A NEW ONE
                windowObjectReferenceKnowledgeBase = window.open(strUrl, "SingleSecondaryWindowKnowledgeBaseName", zOptionsKnowledgeBase);
                windowObjectReferenceKnowledgeBase.focus();
            }
            else if (PreviousUrl != strUrl) {
                // IF THE WINDOW EXISTS AND THE URL IS NEW, CHANGE THE URL OF THE OPEN WINDOW
                windowObjectReferenceKnowledgeBase.location.href = strUrl;
                windowObjectReferenceKnowledgeBase.focus();
            }
            else {
                // IF THE WINDOW EXISTS AND THE URL IS THE SAME, MAKE WINDOW ON TOP
                windowObjectReferenceKnowledgeBase.focus();
            };
            PreviousUrl = strUrl;
        }

        var windowObjectReferenceWhatsNew = null;
        function openRequestedWhatsNew(strUrl, pNavId) {
            // BUILD THE IDS USED FOR REPORTS, GRIDS, AND CHARTS
            var zOptionsWhatsNew = "" +
                "width=1050" +
                ",height=700" +
                ",location=no" +
                ",menubar=no" +
                ",resizable=yes" +
                ",scrollbars=yes" +
                ",status=yes" +
                ",titlebar=no" +
                ",toolbar=no";
            var zQueryOperator = "?";
            var zItemAdded = false;
            if (strUrl.indexOf("?") > -1) {
                zQueryOperator = "&";
            }
            // NAVIGATE TO THE CORRECT AREA
            if (windowObjectReferenceWhatsNew == null || windowObjectReferenceWhatsNew == undefined || windowObjectReferenceWhatsNew.closed) {
                // IF THE WINDOW DOWN NOT EXIST, OPEN A NEW ONE
                windowObjectReferenceWhatsNew = window.open(strUrl, "SingleSecondaryWindowWhatsNewName", zOptionsWhatsNew);
                // windowObjectReferenceWhatsNew.focus();
            }
            else if (PreviousUrl != strUrl) {
                // IF THE WINDOW EXISTS AND THE URL IS NEW, CHANGE THE URL OF THE OPEN WINDOW
                windowObjectReferenceWhatsNew.location.href = strUrl;
                windowObjectReferenceWhatsNew.focus();
            }
            else {
                // IF THE WINDOW EXISTS AND THE URL IS THE SAME, MAKE WINDOW ON TOP
                windowObjectReferenceWhatsNew.focus();
            };
            PreviousUrl = strUrl;
        }



        var searchWindow = null;
        var gSearchEngineUrl = null;
        function searchLinkClick(pUrl) {
            // BUILD THE URL WITH THE PARMS
            var zGSafeGUID = getGSafeGUID();
            var zOperator = "&";
            gSearchEngineUrl = pUrl;
            var zUrl = pUrl;
            if (zUrl.indexOf("?") < 0) {
                var zMode = "l";
                zUrl = zUrl + "?sid=" + zGSafeGUID + "mo=" + zMode;
            }
            //BUILD THE WINDOW AND OPEN
            if (!searchWindow) {
                searchWindow = $('#searchWindow');
                searchWindow.kendoWindow({
                    visible: false,
                    title: "Document Library",
                    width: "850px",
                    height: "515px",
                    modal: true,
                    content: zUrl,
                    iframe: true,
                    open: function (e) {
                        var zGSafeGUID = getGSafeGUID();
                        var zOperator = "&";
                        var zTempUrl = gSearchEngineUrl;
                        if (zTempUrl.indexOf("?") < 0) {
                            var zMode = "l";
                            zTempUrl = zTempUrl + "?sid=" + zGSafeGUID + "mo=" + zMode;
                        }
                        var data = $("#searchWindow").data("kendoWindow");
                        data.refresh(zTempUrl)
                    }

                }).data("kendoWindow").center().open();
            } else {
                searchWindow.data("kendoWindow").center().open();
            }
        }

        var searchLatLongWindow = null;
        var gSearchLatLongUrl = null;
        var gSearchLatLongGridId = null;
        function searchLatLongLinkClick(pUrl, pNavLinkId, pGridId) {
            // BUILD THE URL WITH THE PARMS
            var zGSafeGUID = getGSafeGUID();
            var zOperator = "&";
            gSearchLatLongGridId = pGridId;
            gSearchLatLongUrl = pUrl;
            var zUrl = pUrl;
            if (zUrl.indexOf("?") < 0) {
                //var zMode = "l";
                zUrl = zUrl + "?sid=" + zGSafeGUID;
            }
            zUrl = zUrl + "&gid=" + gSearchLatLongGridId;
            //BUILD THE WINDOW AND OPEN
            if (!searchLatLongWindow) {
                searchLatLongWindow = $('#searchLatLongFacilityWindow');
                searchLatLongWindow.kendoWindow({
                    visible: false,
                    title: "Latitude/Longitude Facility Search",
                    width: "600px",
                    height: "420px",
                    modal: true,
                    content: zUrl,
                    iframe: true,
                    open: function (e) {
                        var zGSafeGUID = getGSafeGUID();
                        var zOperator = "&";
                        var zTempUrl = gSearchLatLongUrl;
                        if (zTempUrl.indexOf("?") < 0) {
                            //var zMode = "l";
                            zTempUrl = zTempUrl + "?sid=" + zGSafeGUID;
                        }
                        zTempUrl = zTempUrl + "&gid=" + gSearchLatLongGridId;
                        var data = $("#searchLatLongFacilityWindow").data("kendoWindow");
                        data.refresh(zTempUrl)
                    }

                }).data("kendoWindow").center().open();
            } else {
                searchLatLongWindow.data("kendoWindow").center().open();
            }
        }


    </script>
    <asp:ContentPlaceHolder ID="HeadContent" runat="server">
    </asp:ContentPlaceHolder>
</head>
<body>
    <form id="form1" runat="server">
        <div style="width: 100%">
            <asp:ContentPlaceHolder ID="MainContent" runat="server">
            </asp:ContentPlaceHolder>
        </div>
        <div class="hidden">
        </div>
    </form>
</body>
</html>
